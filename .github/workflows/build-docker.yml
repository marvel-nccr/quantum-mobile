name: CD-docker

# This process takes over two hours,
# so we only run when creating a new tag/release
on:
  push:
    tags:
    - 'docker-*'

jobs:

  build:

    runs-on: ubuntu-latest

    timeout-minutes: 210

    env:
      instance-name: "qm_instance"

    steps:

    - uses: actions/checkout@v2

    - name: set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: install tox
      run: pip install tox

    - name: Start Docker container
      run: tox -e docker

    - name: Provision Docker container
      run: tox -e ansible -- --extra-vars "build_hosts=docker"
      continue-on-error: true
      id: build_1

    - name: Archive ansible log
      uses: actions/upload-artifact@v2
      with:
        name: ansible-log
        path: ansible.log
      continue-on-error: true

    # improve resilience, if ansible fails, for example due to a download timeout
    # ansible is idempotent, so in principle we can retry as many times as needed
    - name: Provision Docker container (retry)
      if: failure() || steps.build_1.outcome == 'failure'
      run: tox -e ansible -- --extra-vars "build_hosts=docker"

    - name: Archive log
      uses: actions/upload-artifact@v2
      with:
        name: ansible-log
        path: ansible.log
      continue-on-error: true

    - name: Clean build files on container
      run: tox -e ansible -- --tags cleanup --extra-vars "build_hosts=docker"

    - name: Archive log
      uses: actions/upload-artifact@v2
      with:
        name: ansible-log
        path: ansible.log
      continue-on-error: true

    - name: Archive release notes
      uses: actions/upload-artifact@v2
      with:
        name: release-notes
        path: |
          dist/*.md
          dist/*.ini

    - name: Stop Docker container # to flush \tmp
      run: docker stop ${{ env.instance-name }}

    - name: Create Docker image
      run: docker commit -a "Quantum Mobile" -m "Container provisioned by ansible" ${{ env.instance-name }} marvelnccr/quantum-mobile:develop

    - name: Login to Docker Hub
      run: docker login -u chrisjsewell -p ${{ secrets.DOCKER_API_KEY }}

    - name: Upload Docker image to Docker Hub
      run: docker push marvelnccr/quantum-mobile:develop
