name: CD-vagrant

# This process takes over two hours,
# so we only run when creating a new tag/release
on:
  push:
    tags:
    - 'vagrant-*'

jobs:

  build:

    # Vagrant builds require Mac OSX machines,
    # see: https://github.com/actions/virtual-environments/issues/183
    runs-on: macos-12

    timeout-minutes: 210

    env:
      VAGRANT_NO_GUI: true
      VAGRANT_ON_GH: true

    steps:

    - uses: actions/checkout@v3

    - name: set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: install pip requirements
      run: |
        pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt

    - name: install ansible requirements
      run: ansible-galaxy install -r requirements.yml

    - name: Build Vagrant Box
      run: vagrant up
      continue-on-error: true
      id: build_1

    - name: Archive ansible log
      uses: actions/upload-artifact@v3
      with:
        name: ansible-log
        path: ansible.log
      continue-on-error: true

    - name: Write vagrant connection configuration
      run: vagrant ssh-config > vagrant-ssh

    # improve resilience, if ansible fails, for example due to a download timeout
    # ansible is idempotent, so in principle we can retry as many times as needed
    - name: Provision VM (retry)
      if: failure() || steps.build_1.outcome == 'failure'
      run: ansible-playbook playbook-build.yml

    - name: Archive log
      uses: actions/upload-artifact@v3
      with:
        name: ansible-log
        path: ansible.log
      continue-on-error: true

    - name: Clean build files on VM
      # only roles that include "when: clean is defined and clean"
      run: ansible-playbook playbook-build.yml --tags cleanup

    - name: Archive log
      uses: actions/upload-artifact@v3
      with:
        name: ansible-log
        path: ansible.log
      continue-on-error: true

    - name: Package VM
      # validate tests the git tag against the version variable
      run: ansible-playbook playbook-package.yml --skip-tags reload,validate

    - name: Archive log
      uses: actions/upload-artifact@v3
      with:
        name: ansible-log
        path: ansible.log
      continue-on-error: true

    - name: Archive release notes
      uses: actions/upload-artifact@v3
      with:
        name: release-notes
        path: |
          dist/*.md
          dist/*.ini

    # Ideally we would like a way to inspect the final VM image this process creates.
    # This always encounters: https://github.com/actions/upload-artifact/issues/29#issuecomment-706512345
    # TODO upload directly to openstack (as dev version), or another location?
    # - name: Archive distribution
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: distribution
    #     path: dist/
    #     retention-days: 30
