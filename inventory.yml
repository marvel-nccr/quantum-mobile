# This file provides shared variable configuration:

# `all/vars` provides the global configuration
# `all/hosts/*` specifies variables that override global configuration
# CLI variables override any in this file: `ansible-playbook --extra-vars "name=value"`

# see also: https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html

all:

  vars:
    # VM Metadata
    vm_name: "Quantum Mobile"
    vm_version: "23.10.0"
    vm_description: "A Virtual Machine for Computational Materials Science"
    vm_url: "https://github.com/marvel-nccr/marvel-virtualmachine"
    vm_author: "MARVEL NCCR and MaX CoE"
    vm_author_url: "http://nccr-marvel.ch"

    # VM configuration
    vm_base_image: "bento/ubuntu-20.04"
    vm_hostname: "qmobile"
    vm_user: "max"
    vm_password: "moritz"
    vm_memory: 4096
    vm_cpus: 4
    vm_vram: 256
    vm_headless: false
    vm_browser: firefox  # 'chromium-browser' or 'firefox'
    vm_wm_package: ubuntu-desktop-minimal  # 'lxde' or 'ubuntu-desktop-minimal'
    vm_data_folder: "/usr/local/share"  # this is used to put shared data files in
    # vm_shared_folder: "/shared"  # this is currently inactive in Vagrant config
    vm_timezone: "Europe/Zurich"

    # Connection variables
    ansible_python_interpreter: /usr/bin/python3
    root_user: root

    # Build options
    build_dir: "/tmp"
    run_tests: true

    # AiiDAlab options
    vm_qeapp_image: "ghcr.io/aiidalab/qe:v23.10.0"

    # Readme and Release Notes (populated by roles during build)
    qm_homepage: "https://quantum-mobile.readthedocs.io"
    readme_vm_path: "/home/{{ vm_user }}/README.md"
    release_notes: true
    release_notes_vm_user: "{{ vm_user }}"
    release_notes_vm_path: "/home/{{ vm_user }}/RELEASE_NOTES.txt"
    release_notes_locally: true
    local_dist_folder: "{{ playbook_dir }}/dist"
    release_notes_localhost: "{{ local_dist_folder }}/Software-{{ vm_version }}.ini"
    # Vagrant Intructions (created during the package/export phase)
    release_instructions: "{{ local_dist_folder }}/Release-{{ vm_version }}.md"

    aiida_conda_env: "aiida"
    aiida_profile: "generic"
    aiida_jupyter_ip: "localhost"
    aiida_jupyter_port: 8890
    aiida_jupyter_token: "7c8a1215d6768f78e8300804741bd3883d7b1510159b755e"

  hosts:
    vagrant-provision:
      # this private network IP will be created by `vagrant up`
      cloud_platform: virtualbox
      ansible_host: 192.168.56.10
      ansible_user: vagrant
    vagrant-ssh:
      # requires first running `vagrant ssh-config > vagrant-ssh`
      cloud_platform: virtualbox
      ansible_host: default
      ansible_ssh_common_args: "-F vagrant-ssh"
      ansible_user: vagrant

    docker:
      # see playbook-docker.yml to start container
      cloud_platform: docker
      ansible_host: qm_instance  # the instance name
      ansible_connection: docker
      ansible_user: root
      vm_headless: true
      aiida_jupyter_ip: "0.0.0.0"

    # To connect to VMs you should change the host IP and provide an SSH key file
    aws:
      cloud_platform: aws
      ansible_host: 34.227.10.49  # change this
      ansible_ssh_common_args: -i ./keys/quantum-mobile.pem -o StrictHostKeyChecking=no
      ansible_user: ubuntu
      vm_headless: true
      add_user_public_key: "{{ lookup('file', './keys/user-key.pub') }}"
    hwcloud:
      cloud_platform: hwcloud
      ansible_host: 34.250.68.129  # change this
      ansible_ssh_common_args: -i ./keys/quantum-mobile.pem -o StrictHostKeyChecking=no
      ansible_user: root
      vm_headless: true
      # add_user_public_key: "{{ lookup('file', './keys/user-key.pub') }}"
    openstack:
      cloud_platform: openstack
      ansible_host: 34.250.68.129  # change this
      ansible_ssh_common_args: -i ./keys/quantum-mobile.pem -o StrictHostKeyChecking=no
      ansible_user: ubuntu
      vm_headless: true
      # add_user_public_key: "{{ lookup('file', './keys/user-key.pub') }}"
    gcp:
      cloud_platform: gcp
      ansible_host: 34.250.68.129  # change this
      ansible_ssh_common_args: -i ./keys/quantum-mobile.pem -o StrictHostKeyChecking=no
      ansible_user: max
      vm_headless: true
      # add_user_public_key: "{{ lookup('file', './keys/user-key.pub') }}"
    utm:
      cloud_platform: utm
      ansible_host: 127.0.0.1
      ansible_port: 2200
      ansible_user: max
      vm_headless: false
